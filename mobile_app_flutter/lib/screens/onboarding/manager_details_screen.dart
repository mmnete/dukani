// lib/screens/manager_details_screen.dart

import 'package:flutter/material.dart';
import '../../components/phone_input.dart';
import '../../services/api_provider.dart'; // Adjust path as needed
import '../manager/manager_dashboard_screen.dart'; // Adjust path as needed
import '../../services/api_service_selector.dart'; // Adjust path as needed
import '../../l10n/app_localizations.dart'; // Generated by Flutter

class ManagerOnboardingScreen extends StatefulWidget {
  final String shopId; // Receive shopId from previous screen

  const ManagerOnboardingScreen({super.key, required this.shopId});

  @override
  State<ManagerOnboardingScreen> createState() => _ManagerOnboardingScreenState();
}

class _ManagerOnboardingScreenState extends State<ManagerOnboardingScreen> {
  final TextEditingController _managerNameController = TextEditingController();
  final TextEditingController _managerPhoneController = TextEditingController();
  bool _isLoading = false;

  final ApiProvider apiService = ApiServiceSelector().switchTo(ApiMode.dummy);

  @override
  void dispose() {
    _managerNameController.dispose();
    _managerPhoneController.dispose();
    super.dispose();
  }

  Future<void> _onboardManager() async {
    final localizations = AppLocalizations.of(context)!;
    setState(() {
      _isLoading = true;
    });

    try {
      final managerResult = await apiService.onboardManager(
        shopId: widget.shopId, // Use the shopId passed from the previous screen
        managerName: _managerNameController.text,
        managerPhone: _managerPhoneController.text,
        context: context, // Pass context here
      );

      if (managerResult['success'] == true) {
        _showSnackBar(localizations.completeManagerRegistration); // Localized message

        // After successful manager onboarding, navigate to the Manager Dashboard
        // This will clear the onboarding stack.
        Navigator.pushAndRemoveUntil(
          context,
          MaterialPageRoute(builder: (context) => const ManagerDashboardScreen(managerName: 'Mohamed Mnete')),
          (Route<dynamic> route) => false, // Remove all previous routes
        );
      } else {
        _showSnackBar('Manager onboarding failed!');
      }
    } catch (e) {
      _showSnackBar('An error occurred: ${e.toString()}');
      print('Manager onboarding error: $e');
    } finally {
      setState(() {
        _isLoading = false;
      });
    }
  }

  void _showSnackBar(String message) {
    ScaffoldMessenger.of(context).showSnackBar(
      SnackBar(content: Text(message)),
    );
  }

  @override
  Widget build(BuildContext context) {
    final localizations = AppLocalizations.of(context)!;

    return Scaffold(
      appBar: AppBar(
        title: Text(localizations.registerManager), // Localized
        backgroundColor: Theme.of(context).primaryColor,
      ),
      body: SingleChildScrollView(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.stretch,
          children: [
            Text(
              localizations.registerManager, // Localized
              style: Theme.of(context).textTheme.titleLarge,
              textAlign: TextAlign.center,
            ),
            const SizedBox(height: 24),
            TextField(
              controller: _managerNameController,
              decoration: InputDecoration(labelText: localizations.managerName), // Localized
            ),
            const SizedBox(height: 16),
            TextField(
              controller: _managerPhoneController,
              decoration: InputDecoration(labelText: localizations.managerPhone), // Localized
              keyboardType: TextInputType.phone,
            ),
            const SizedBox(height: 32),
            _isLoading
                ? const Center(child: CircularProgressIndicator())
                : ElevatedButton(
                    onPressed: _onboardManager,
                    child: Text(localizations.completeManagerRegistration), // Localized
                  ),
          ],
        ),
      ),
    );
  }
}

import 'package:flutter/material.dart';
import 'manager_details_screen.dart';
import '../../components/address_component.dart'; // Adjust import path accordingly
import '../../services/api_provider.dart'; // Adjust path as needed
import '../../services/api_service_selector.dart'; // Adjust path as needed
import '../manager/manager_dashboard_screen.dart';
import '../../l10n/app_localizations.dart'; // Generated by Flutter

class ShopOnboardingScreen extends StatefulWidget {
  const ShopOnboardingScreen({super.key});

  @override
  State<ShopOnboardingScreen> createState() => _ShopOnboardingScreenState();
}

class _ShopOnboardingScreenState extends State<ShopOnboardingScreen> {
  final TextEditingController _shopNameController = TextEditingController();
  final TextEditingController _shopAddressController = TextEditingController();
  bool _isLoading = false;

  final ApiProvider apiService = ApiServiceSelector().switchTo(ApiMode.dummy);

  @override
  void dispose() {
    _shopNameController.dispose();
    _shopAddressController.dispose();
    super.dispose();
  }

  Future<void> _onboardShop() async {
    final localizations = AppLocalizations.of(context)!;
    setState(() {
      _isLoading = true;
    });

    try {
      final shopResult = await apiService.onboardShop(
        name: _shopNameController.text,
        address: _shopAddressController.text,
        context: context, // Pass context
      );

      if (shopResult['success'] == true) {
        final String shopId = shopResult['shop_id'] as String;
        _showSnackBar(localizations.completeShopRegistration); // Localized message

        // Navigate to the Manager Onboarding Screen, passing the shopId
        Navigator.push(
          context,
          MaterialPageRoute(
            builder: (context) => ManagerOnboardingScreen(shopId: shopId),
          ),
        );
      } else {
        _showSnackBar('Shop onboarding failed!');
      }
    } catch (e) {
      _showSnackBar('An error occurred: ${e.toString()}');
      print('Shop onboarding error: $e');
    } finally {
      setState(() {
        _isLoading = false;
      });
    }
  }

  void _showSnackBar(String message) {
    ScaffoldMessenger.of(context).showSnackBar(
      SnackBar(content: Text(message)),
    );
  }

  @override
  Widget build(BuildContext context) {
    final localizations = AppLocalizations.of(context)!;

    return Scaffold(
      appBar: AppBar(
        title: Text(localizations.registerYourShop), // Localized
        backgroundColor: Theme.of(context).primaryColor,
      ),
      body: SingleChildScrollView(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.stretch,
          children: [
            Text(
              localizations.registerYourShop, // Localized
              style: Theme.of(context).textTheme.titleLarge,
              textAlign: TextAlign.center,
            ),
            const SizedBox(height: 24),
            TextField(
              controller: _shopNameController,
              decoration: InputDecoration(labelText: localizations.shopName), // Localized
            ),
            const SizedBox(height: 16),
            TextField(
              controller: _shopAddressController,
              decoration: InputDecoration(labelText: localizations.shopAddress), // Localized
            ),
            const SizedBox(height: 32),
            _isLoading
                ? const Center(child: CircularProgressIndicator())
                : ElevatedButton(
                    onPressed: _onboardShop,
                    child: Text(localizations.completeShopRegistration), // Localized
                  ),
          ],
        ),
      ),
    );
  }
}
